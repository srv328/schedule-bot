from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
from aiogram.enums.parse_mode import ParseMode
from work_with_db import get_schedule_statistics
from utils import generate_schedule_statistics_message

router = Router()


@router.message(F.text == "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞üìä")
async def schedule_statistics(message: Message):
    user_id = message.from_user.id
    even_schedule, odd_schedule = get_schedule_statistics("schedule", user_id)
    statistics_message = generate_schedule_statistics_message(even_schedule, odd_schedule)
    share = [[InlineKeyboardButton(
        text='–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π',
        switch_inline_query=f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')]]

    inline_markup = InlineKeyboardMarkup(inline_keyboard=share)
    if statistics_message == '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–Ω—è—Ç–∏–π –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏.':
        await message.answer('–£ –≤–∞—Å –ø–æ–∫–∞ <b>–Ω–µ—Ç –∑–∞–Ω—è—Ç–∏–π</b>! –ö–∞–Ω–∏–∫—É–ª—ã?)', parse_mode=ParseMode.HTML)
        gif = FSInputFile("media/–∫–æ–ø–∞—Ç—ã—á.mp4")
        await message.answer_video(gif)
    else:
        await message.answer(statistics_message, reply_markup=inline_markup, parse_mode=ParseMode.HTML)
